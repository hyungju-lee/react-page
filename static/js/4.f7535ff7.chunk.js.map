{"version":3,"sources":["Detail.js"],"names":["Box","styled","div","Title","h4","props","color","TabContent","useEffect","onOffEdit","tabNum","Info","i","connect","state","console","log","reducer","alert","reducer2","useState","alertEdit","valueEdit","useContext","stockContext","tab","tabEdit","onOff","timer","setTimeout","clearTimeout","idNum","id","useParams","shoes","length","Number","history","useHistory","className","type","onChange","e","target","value","src","width","title","content","price","stock","onClick","newStock","stockEdit","dispatch","payload","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"qOASIA,EAAMC,IAAOC,IAAV,8CAIHC,EAAQF,IAAOG,GAAV,8DAEE,SAAAC,GAAK,OAAIA,EAAMC,SA2H1B,SAASC,EAAWF,GAMhB,OAJAG,qBAAU,WACNH,EAAMI,WAAU,MAGC,IAAjBJ,EAAMK,OACC,gFACiB,IAAjBL,EAAMK,OACN,qFADJ,EAKX,SAASC,EAAKN,GACV,OACI,+CAAQA,EAAMO,KAaPC,uBARf,SAAoBC,GAEhB,OADAC,QAAQC,IAAIF,GACL,CACHA,MAAOA,EAAMG,QACbC,MAAOJ,EAAMK,YAINN,EApJf,SAAgBR,GAAQ,IAAD,EAEMe,oBAAS,GAFf,mBAEdF,EAFc,KAEPG,EAFO,OAGMD,mBAAS,IAHf,mBAGPE,GAHO,cAIPC,qBAAWC,KAEFJ,mBAAS,IANX,mBAMdK,EANc,KAMTC,EANS,OAOMN,oBAAS,GAPf,mBAOdO,EAPc,KAOPlB,EAPO,KASnBD,qBAAU,WACN,IAAMoB,EAAQC,YAAW,WACrBd,QAAQC,IAAI,gBACZK,GAAU,KACX,KAEH,OAAO,WACHS,aAAaF,MAElB,CAACV,IACJV,qBAAU,WACN,OAAO,WACHO,QAAQC,IAAI,wCAOpB,IA5BmB,IA2Bfe,EADEC,EAAOC,cAAPD,GAEGpB,EAAI,EAAGA,EAAIP,EAAM6B,MAAMC,OAAQvB,IACpC,GAAIwB,OAAOJ,KAAQ3B,EAAM6B,MAAMtB,GAAGoB,GAAI,CAClCD,EAAQnB,EACR,MASR,IAAIyB,EAAUC,cAEd,OACI,sBAAKC,UAAU,YAAf,UAEI,cAACvC,EAAD,UACI,cAACG,EAAD,CAAOoC,UAAU,MAAjB,8CAGJ,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAC1BpB,EAAUoB,EAAEC,OAAOC,WAIT,IAAV1B,EACK,qBAAKqB,UAAU,YAAf,SACG,8GACM,KAGlB,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKM,IAAG,mDAA8CxC,EAAM6B,MAAMH,GAAOC,GAAG,EAApE,QAA6Ec,MAAM,WAE/F,sBAAKP,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBlC,EAAM6B,MAAMH,GAAOgB,QACzC,4BAAI1C,EAAM6B,MAAMH,GAAOiB,UACvB,8BAAI3C,EAAM6B,MAAMH,GAAOkB,MAAvB,YACA,cAACtC,EAAD,CAAMC,EAAGP,EAAM6C,MAAMnB,KACrB,wBAAQQ,UAAU,iBAAiBY,QAAS,WAExC,IAAMC,EAAQ,YAAO/C,EAAM6C,OAC3BE,EAASrB,GAASqB,EAASrB,GAAS,EACpC1B,EAAMgD,UAAUD,GAEhB/C,EAAMiD,SAAS,CACXd,KAAM,2BACNe,QAAS,CACLvB,GAAI3B,EAAM6B,MAAMH,GAAOC,GACvBwB,KAAMnD,EAAM6B,MAAMH,GAAOgB,MACzBU,KAAM,KAKdpB,EAAQqB,KAAK,UAhBjB,sCAkBA,wBAAQnB,UAAU,iBAAiBY,QAAS,WACxCd,EAAQsB,UADZ,4CAMR,eAAC,IAAD,CAAKpB,UAAU,OAAOqB,QAAQ,OAAOC,iBAAiB,SAAtD,UACI,cAAC,IAAIC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WACjCzB,EAAQ,GAKRjB,GAAU,IANd,sBASJ,cAAC,IAAIqD,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WACjCzB,EAAQ,GACRjB,GAAU,IAFd,2BAOR,cAAC,IAAD,CAAewD,GAAItC,EAAOuC,WAAW,MAAMC,QAAS,IAApD,SACA,cAAC5D,EAAD,CAAYG,OAAQe,EAAKhB,UAAWA","file":"static/js/4.f7535ff7.chunk.js","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Nav} from 'react-bootstrap';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport {stockContext} from './App';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\n\r\nlet Box = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nlet Title = styled.h4`\r\n  font-size: 25px;\r\n  color: ${props => props.color}\r\n`;\r\n\r\nfunction Detail(props) {\r\n\r\n    let [alert, alertEdit] = useState(true);\r\n    let [value, valueEdit] = useState(\"\");\r\n    let stock = useContext(stockContext);\r\n\r\n    let [tab, tabEdit] = useState(0);\r\n    let [onOff, onOffEdit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            console.log(\"실행\");\r\n            alertEdit(false);\r\n        }, 2000)\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, [alert]);\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(\"이것도 실행?\");\r\n        }\r\n    })\r\n\r\n    // url 파라미터 저장\r\n    let { id } = useParams();\r\n    let idNum;\r\n    for (let i = 0; i < props.shoes.length; i++) {\r\n        if (Number(id) === props.shoes[i].id) {\r\n            idNum = i;\r\n            break\r\n        }\r\n    }\r\n    // props.shoes.forEach((value, index, array) => {\r\n    //     if (Number(id) === value.id) {\r\n    //         idNum = index;\r\n    //     }\r\n    // })\r\n    // 방문기록 등을 저장해놓는 object\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <Box>\r\n                <Title className=\"red\">상세페이지</Title>\r\n            </Box>\r\n\r\n            <input type=\"text\" onChange={(e) => {\r\n                valueEdit(e.target.value);\r\n            }}/>\r\n            \r\n            {\r\n                alert === true ?\r\n                    (<div className=\"my-alert2\">\r\n                        <p>재고가 얼마남지 않았습니다.</p>\r\n                    </div>) : null\r\n            }\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={`https://codingapple1.github.io/shop/shoes${props.shoes[idNum].id+1}.jpg`} width=\"100%\"/>\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{props.shoes[idNum].title}</h4>\r\n                    <p>{props.shoes[idNum].content}</p>\r\n                    <p>{props.shoes[idNum].price}원</p>\r\n                    <Info i={props.stock[idNum]} />\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        // state가 배열인지 객체형태인지 항상 생각하자!!!!\r\n                        const newStock = [...props.stock];\r\n                        newStock[idNum] = newStock[idNum] - 1;\r\n                        props.stockEdit(newStock);\r\n\r\n                        props.dispatch({\r\n                            type: '항목추가',\r\n                            payload: {\r\n                                id: props.shoes[idNum].id,\r\n                                name: props.shoes[idNum].title,\r\n                                quan: 1\r\n                            }\r\n                        })\r\n                        // 상단에 useHistory() 훅을 추가했기 때문에 아래 코드 사용가능\r\n                        // 페이지 이동을 강제로 시켜주는 코드\r\n                        history.push('/cart');\r\n                    }}>주문하기</button>\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        history.goBack();\r\n                    }}>뒤로가기</button>\r\n                </div>\r\n            </div>\r\n\r\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={() => {\r\n                        tabEdit(0);\r\n                        // 이미 처음 이 페이지, 컴포넌트 로드될 때 TabContent 로드되면서 CSSTransition의 in 속성 값은 true로 바뀌어있음\r\n                        // TabContent에 useEffect 훅으로 인해 로드될 때 in 속성을 true로 바꿨으니깐.\r\n                        // 즉, 그래서 그대로 냅두면 애니메이션은 효과는 실행이 안됨\r\n                        // 그래서 버튼 클릭할 때마다 다시 false로 바꾸고 -> TabContent 컴포넌트 로드될 때 true로 바뀌면서 애니메이션 실행\r\n                        onOffEdit(false);\r\n                    }}>Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={() => {\r\n                        tabEdit(1);\r\n                        onOffEdit(false);\r\n                    }}>Option 2</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={onOff} classNames=\"wow\" timeout={1000}>\r\n            <TabContent tabNum={tab} onOffEdit={onOffEdit} />\r\n            </CSSTransition>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabContent(props) {\r\n\r\n    useEffect(() => {\r\n        props.onOffEdit(true);\r\n    })\r\n\r\n    if (props.tabNum === 0) {\r\n        return <div>0번째 내용입니다.</div>\r\n    } else if (props.tabNum === 1) {\r\n        return <div>1번째 내용입니다.</div>\r\n    }\r\n}\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p>재고: {props.i}</p>\r\n    )\r\n}\r\n\r\n// redux store 데이터 가져와서 props로 변환해주는 함수\r\nfunction stateProps(state) {\r\n    console.log(state)\r\n    return {\r\n        state: state.reducer,\r\n        alert: state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(stateProps)(Detail);"],"sourceRoot":""}